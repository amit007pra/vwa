name: Build and deploy WAR app with MySQL and Tomcat

on:
  push:
    branches:
      - master
  workflow_dispatch:

env:
  MYSQL_DB: dvja
  MYSQL_USER: root
  MYSQL_PASSWORD: secret_password

jobs:
  setup:
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          java-version: '11'  # Adjusted to Java 11 as Java 1.7 is no longer supported in most modern environments
          distribution: 'temurin'

      - name: Set up MySQL server
        run: |
          sudo apt-get update
          sudo apt-get install -y mysql-server
          sudo service mysql start
          mysql -e "CREATE DATABASE $MYSQL_DB;"
          mysql -e "CREATE USER '$MYSQL_USER'@'localhost' IDENTIFIED BY '$MYSQL_PASSWORD';"
          mysql -e "GRANT ALL PRIVILEGES ON $MYSQL_DB.* TO '$MYSQL_USER'@'localhost';"
          mysql -e "FLUSH PRIVILEGES;"

      - name: Import MySQL schema
        run: mysql -u $MYSQL_USER -p$MYSQL_PASSWORD $MYSQL_DB < ./db/schema.sql

      - name: Set up Maven
        uses: actions/setup-java@v4
        with:
          java-version: '1.7'
          distribution: 'temurin'

      - name: Build with Maven
        run: mvn clean package

      - name: Upload artifact for deployment
        uses: actions/upload-artifact@v4
        with:
          name: dvja-war
          path: target/*.war

  test:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dvja-war
          path: ./target

      - name: Run Jetty server for local testing
        run: mvn jetty:run
        timeout-minutes: 5  # Define the time limit for Jetty testing

  deploy:
    runs-on: ubuntu-latest
    needs: setup

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: dvja-war
          path: ./target

      - name: Deploy to Tomcat
        run: |
          sudo apt-get install -y tomcat9
          sudo cp ./target/dvja.war /var/lib/tomcat9/webapps/ROOT.war
          sudo service tomcat9 restart
